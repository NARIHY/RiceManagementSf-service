{
    "openapi": "3.1.0",
    "info": {
        "title": "Rice Management Service",
        "description": "Rice Management Service (RMS) est une organisation d\u00e9di\u00e9e \u00e0 la gestion et \u00e0 l 'optimisation de la production de riz. Elle propose des solutions durables pour am\u00e9liorer les rendements, former les agriculteurs aux meilleures pratiques et g\u00e9rer efficacement la cha\u00eene d'approvisionnement. RMS s'engage \u00e0 promouvoir des m\u00e9thodes respectueuses de l'environnement tout en soutenant les communaut\u00e9s locales, garantissant ainsi une production de riz \u00e0 la fois rentable et durable.",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/arrivals": {
            "get": {
                "operationId": "api_arrivals_get_collection",
                "tags": [
                    "Arrival"
                ],
                "responses": {
                    "200": {
                        "description": "Arrival collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Arrival.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Arrival resources.",
                "description": "Retrieves the collection of Arrival resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_arrivals_post",
                "tags": [
                    "Arrival"
                ],
                "responses": {
                    "201": {
                        "description": "Arrival resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Arrival resource.",
                "description": "Creates a Arrival resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Arrival resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Arrival.jsonld-arrival.collection.post_status.collection.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Arrival-arrival.collection.post_status.collection.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Arrival-arrival.collection.post_status.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/arrivals/{id}": {
            "get": {
                "operationId": "api_arrivals_id_get",
                "tags": [
                    "Arrival"
                ],
                "responses": {
                    "200": {
                        "description": "Arrival resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Arrival resource.",
                "description": "Retrieves a Arrival resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Arrival identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_arrivals_id_patch",
                "tags": [
                    "Arrival"
                ],
                "responses": {
                    "200": {
                        "description": "Arrival resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Arrival resource.",
                "description": "Updates the Arrival resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Arrival identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Arrival resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Arrival-arrival.collection.post_status.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/bags": {
            "get": {
                "operationId": "api_bags_get_collection",
                "tags": [
                    "Bag"
                ],
                "responses": {
                    "200": {
                        "description": "Bag collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Bag resources.",
                "description": "Retrieves the collection of Bag resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_bags_post",
                "tags": [
                    "Bag"
                ],
                "responses": {
                    "201": {
                        "description": "Bag resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Bag resource.",
                "description": "Creates a Bag resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Bag resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag.jsonld-bag.collection.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag-bag.collection.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag-bag.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/bags/{id}": {
            "get": {
                "operationId": "api_bags_id_get",
                "tags": [
                    "Bag"
                ],
                "responses": {
                    "200": {
                        "description": "Bag resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Bag resource.",
                "description": "Retrieves a Bag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bag identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_bags_id_patch",
                "tags": [
                    "Bag"
                ],
                "responses": {
                    "200": {
                        "description": "Bag resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Bag resource.",
                "description": "Updates the Bag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bag identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Bag resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag-bag.collection.post_bag.arrival.collection"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/clients": {
            "get": {
                "operationId": "api_clients_get_collection",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Client.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Client resources.",
                "description": "Retrieves the collection of Client resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_clients_post",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "201": {
                        "description": "Client resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Client resource.",
                "description": "Creates a Client resource.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new Client resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client.jsonld-client.collection.post_client.collection.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client-client.collection.post_client.collection.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Client-client.collection.post_client.collection.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/clients/{id}": {
            "get": {
                "operationId": "api_clients_id_get",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Client resource.",
                "description": "Retrieves a Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_clients_id_put",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Client resource.",
                "description": "Replaces the Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Client resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client.jsonld-client.collection.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client-client.collection.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Client-client.collection.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "api_clients_id_delete",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "204": {
                        "description": "Client resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Client resource.",
                "description": "Removes the Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/genders": {
            "get": {
                "operationId": "api_genders_get_collection",
                "tags": [
                    "GenderManagement"
                ],
                "responses": {
                    "200": {
                        "description": "GenderManagement collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GenderManagement.jsonld-gender.collection.get"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GenderManagement-gender.collection.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GenderManagement-gender.collection.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of GenderManagement resources.",
                "description": "Retrieves the collection of GenderManagement resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/History/temp": {
            "get": {
                "operationId": "api_Historytemp_get_collection",
                "tags": [
                    "HistoriqueTemp"
                ],
                "responses": {
                    "200": {
                        "description": "HistoriqueTemp collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HistoriqueTemp.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HistoriqueTemp"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HistoriqueTemp"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of HistoriqueTemp resources.",
                "description": "Retrieves the collection of HistoriqueTemp resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/login": {
            "post": {
                "operationId": "login_check_post",
                "tags": [
                    "Login Check"
                ],
                "responses": {
                    "200": {
                        "description": "User token created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "readOnly": true,
                                            "type": "string",
                                            "nullable": false
                                        }
                                    },
                                    "required": [
                                        "token"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Creates a user token.",
                "description": "Creates a user token.",
                "requestBody": {
                    "description": "The login data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "password": {
                                        "type": "string",
                                        "nullable": false
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ]
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/statuses": {
            "get": {
                "operationId": "api_statuses_get_collection",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "description": "Status collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status.jsonld-statuses.collection.get_statuses.collection.post"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Status resources.",
                "description": "Retrieves the collection of Status resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_statuses_post",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "201": {
                        "description": "Status resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status.jsonld-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Status resource.",
                "description": "Creates a Status resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Status resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Status.jsonld-statuses.collection.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Status-statuses.collection.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Status-statuses.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/statuses/{id}": {
            "get": {
                "operationId": "api_statuses_id_get",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "description": "Status resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status.jsonld-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Status resource.",
                "description": "Retrieves a Status resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Status identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_statuses_id_patch",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "description": "Status resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status.jsonld-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status-statuses.collection.get_statuses.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Status resource.",
                "description": "Updates the Status resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Status identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Status resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Status-statuses.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/stocks": {
            "get": {
                "operationId": "api_stocks_get_collection",
                "tags": [
                    "Stock"
                ],
                "responses": {
                    "200": {
                        "description": "Stock collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Stock.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stock"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stock"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Stock resources.",
                "description": "Retrieves the collection of Stock resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/roles": {
            "get": {
                "operationId": "api_roles_get_collection",
                "tags": [
                    "TypeCompte"
                ],
                "responses": {
                    "200": {
                        "description": "TypeCompte collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeCompte.jsonld-typeCompte.collection.get"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeCompte-typeCompte.collection.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeCompte-typeCompte.collection.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TypeCompte resources.",
                "description": "Retrieves the collection of TypeCompte resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/typerices": {
            "get": {
                "operationId": "api_typerices_get_collection",
                "tags": [
                    "Typerice"
                ],
                "responses": {
                    "200": {
                        "description": "Typerice collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.get_typerice.collection.post"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Typerice resources.",
                "description": "Retrieves the collection of Typerice resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_typerices_post",
                "tags": [
                    "Typerice"
                ],
                "responses": {
                    "201": {
                        "description": "Typerice resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Typerice resource.",
                "description": "Creates a Typerice resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Typerice resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice-typerice.collection.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice-typerice.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/typerices/{id}": {
            "get": {
                "operationId": "api_typerices_id_get",
                "tags": [
                    "Typerice"
                ],
                "responses": {
                    "200": {
                        "description": "Typerice resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Typerice resource.",
                "description": "Retrieves a Typerice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Typerice identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_typerices_id_put",
                "tags": [
                    "Typerice"
                ],
                "responses": {
                    "200": {
                        "description": "Typerice resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Typerice-typerice.collection.get_typerice.collection.post"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Typerice resource.",
                "description": "Replaces the Typerice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Typerice identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Typerice resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice.jsonld-typerice.collection.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice-typerice.collection.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Typerice-typerice.collection.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "api_typerices_id_delete",
                "tags": [
                    "Typerice"
                ],
                "responses": {
                    "204": {
                        "description": "Typerice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Typerice resource.",
                "description": "Removes the Typerice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Typerice identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/me": {
            "get": {
                "operationId": "api_me_get_collection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.jsonld-read.User"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-read.User"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-read.User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/users": {
            "get": {
                "operationId": "api_users_get_collection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.jsonld-read.User"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-read.User"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-read.User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/users/{id}": {
            "get": {
                "operationId": "api_users_id_get",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-read.User"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-read.User"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-read.User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_users_id_put",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-read.User"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-read.User"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-read.User"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the User resource.",
                "description": "Replaces the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated User resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-writte.User"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-writte.User"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User-writte.User"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "Arrival-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "labelName": {
                        "type": "string"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bagPrice": {
                        "type": "number"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "bag": {
                        "$ref": "#/components/schemas/Bag-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                    }
                }
            },
            "Arrival-arrival.collection.post_status.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "labelName": {
                        "type": "string"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "bagPrice": {
                        "type": "number"
                    },
                    "bag": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                }
            },
            "Arrival.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "labelName": {
                        "type": "string"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bagPrice": {
                        "type": "number"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "bag": {
                        "$ref": "#/components/schemas/Bag.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post"
                    }
                }
            },
            "Arrival.jsonld-arrival.collection.post_status.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "labelName": {
                        "type": "string"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "bagPrice": {
                        "type": "number"
                    },
                    "bag": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                }
            },
            "Bag-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Bag-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "stock": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stock-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                        }
                    }
                }
            },
            "Bag-bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Bag-bag.collection.post_bag.arrival.collection": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "quantity": {
                        "type": "string"
                    },
                    "arrivals": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    }
                }
            },
            "Bag.jsonld-arrival.collection.get_arrival.collection.post_statuses.collection.get_statuses.collection.post_bag.collection.get_bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Bag.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "stock": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stock.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte"
                        }
                    }
                }
            },
            "Bag.jsonld-bag.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "quantity": {
                        "type": "string"
                    }
                }
            },
            "Client-client.collection.get_client.collection.post_client.collection.put_gender.collection.get": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "cin": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GenderManagement-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                },
                "required": [
                    "name",
                    "lastName",
                    "cin",
                    "address"
                ]
            },
            "Client-client.collection.post_client.collection.put": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "required": [
                    "name",
                    "lastName",
                    "cin",
                    "address"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "cin": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                }
            },
            "Client-client.collection.put": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "type": "string"
                    }
                }
            },
            "Client.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "cin": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GenderManagement.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                },
                "required": [
                    "name",
                    "lastName",
                    "cin",
                    "address"
                ]
            },
            "Client.jsonld-client.collection.post_client.collection.put": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "required": [
                    "name",
                    "lastName",
                    "cin",
                    "address"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "cin": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    }
                }
            },
            "Client.jsonld-client.collection.put": {
                "type": "object",
                "description": "Gestion des clients de notre application",
                "deprecated": false,
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "type": "string"
                    }
                }
            },
            "GenderManagement-client.collection.get_client.collection.post_client.collection.put_gender.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "genderName": {
                        "type": "string"
                    }
                }
            },
            "GenderManagement-gender.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "genderName": {
                        "type": "string"
                    }
                }
            },
            "GenderManagement.jsonld-client.collection.get_client.collection.post_client.collection.put_gender.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "genderName": {
                        "type": "string"
                    }
                }
            },
            "GenderManagement.jsonld-gender.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "genderName": {
                        "type": "string"
                    }
                }
            },
            "HistoriqueTemp": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nomTable": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "action": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "details": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_action": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "dateAction": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "HistoriqueTemp.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nomTable": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "action": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "details": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_action": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "dateAction": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "Status-statuses.collection.get_statuses.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "statusName": {
                        "type": "string"
                    }
                },
                "required": [
                    "statusName"
                ]
            },
            "Status-statuses.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "statusName"
                ],
                "properties": {
                    "statusName": {
                        "type": "string"
                    }
                }
            },
            "Status.jsonld-statuses.collection.get_statuses.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "statusName": {
                        "type": "string"
                    }
                },
                "required": [
                    "statusName"
                ]
            },
            "Status.jsonld-statuses.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "statusName"
                ],
                "properties": {
                    "statusName": {
                        "type": "string"
                    }
                }
            },
            "Stock": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "aivalableQuantity": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "bags": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "bag": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    }
                }
            },
            "Stock-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "aivalableQuantity": {
                        "type": "string"
                    }
                }
            },
            "Stock.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "aivalableQuantity": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "bags": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "bag": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    }
                }
            },
            "Stock.jsonld-bag.collection.get_bag.collection.post_arrival.collection.get_arrival.collection.post_stock.bag.collection_stock.collection.read_stock.collection.writte": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "aivalableQuantity": {
                        "type": "string"
                    }
                }
            },
            "TypeCompte-typeCompte.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "role": {
                        "type": "string"
                    }
                }
            },
            "TypeCompte.jsonld-typeCompte.collection.get": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "Typerice": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "riceName",
                    "description"
                ]
            },
            "Typerice-typerice.collection.get_typerice.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "riceName",
                    "description"
                ]
            },
            "Typerice-typerice.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "riceName",
                    "description"
                ],
                "properties": {
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Typerice.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "riceName",
                    "description"
                ]
            },
            "Typerice.jsonld-typerice.collection.get_typerice.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "riceName",
                    "description"
                ]
            },
            "Typerice.jsonld-typerice.collection.post": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "riceName",
                    "description"
                ],
                "properties": {
                    "riceName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "User-read.User": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "description": "The user roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "User-writte.User": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "roles": {
                        "description": "The user roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "User.jsonld-read.User": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "description": "The user roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "User.jsonld-writte.User": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "roles": {
                        "description": "The user roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "JWT": []
        }
    ],
    "tags": [],
    "webhooks": {}
}